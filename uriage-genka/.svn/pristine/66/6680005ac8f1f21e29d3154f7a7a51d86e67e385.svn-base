package ug.action;

import java.util.List;

import javax.annotation.Resource;

import org.seasar.extension.jdbc.JdbcManager;
import org.seasar.struts.annotation.ActionForm;
import org.seasar.struts.annotation.Execute;

import ug.SqlFiles;
import ug.condition.UkListCondition;
import ug.dto.UkListDto;
import ug.dto.UserDataDto;
import ug.entity.EmpMaster;
import ug.entity.UgCodeMaster;
import ug.form.UkListForm;
import ug.service.EmpMasterService;
import ug.service.UgCodeMasterService;

public class UkListAction {

	@ActionForm
	@Resource
	protected UkListForm ukListForm;

	@Resource
	protected UserDataDto userDataDto;

	@Resource
	protected JdbcManager jdbcManager;

	@Resource
	protected EmpMasterService empMasterService;

	@Resource
	protected UgCodeMasterService ugCodeMasterService;

	/**売上計画管理表*/
	public List<UkListDto> ukList;

	/**年度リスト*/
	public List<String> nendoList;

	/**営業担当リスト*/
	public List<EmpMaster> eigyoList;

	/**所属長リスト（開発グループ名）*/
	public List<EmpMaster> kaihatsuGroupList;

	//TODO なぜか確度リストだけリクエスト時にcheckedされない
	/**確度リスト*/
	public List<UgCodeMaster> kakudoList;

	/**発注タイプリスト*/
	public List<UgCodeMaster> hattyuTypeList;

	/**状態コードリスト*/
	public List<UgCodeMaster> conditionCodeList;


	/**
	 * 初期表示
	 * @return
	 */
	@Execute(validator=false)
	public String index(){
		//TODO とりあえず権限付与 あとで消す
		userDataDto.ukUpdate = "1";
		userDataDto.ukInsert = "1";

		//ukListCondition.nendo = ug.util.StringUtil.getCurrentNendo();
		ukListForm.searchNendo = ug.util.StringUtil.getCurrentNendo();
		UkListCondition ukListCondition = new UkListCondition();
		refillCondition(ukListForm, ukListCondition);
		ukList = jdbcManager.selectBySqlFile(UkListDto.class, SqlFiles.searchUkList, ukListCondition).getResultList();

		reload(ukList);

		return "list.jsp";
	}

	/**
	 * 「検索」ボタン押下時
	 * @return
	 */
	@Execute(input="index")
	public String search(){

		UkListCondition ukListCondition = new UkListCondition();
		refillCondition(ukListForm, ukListCondition);
		ukList = jdbcManager.selectBySqlFile(UkListDto.class, SqlFiles.searchUkList, ukListCondition).getResultList();

		reload(ukList);

		return "list.jsp";
	}

	/**
	 * 「新規作成」ボタン押下時
	 * @return
	 */
	@Execute(input="index")
	public String newCreate(){
		return "list.jsp";
	}

	/**
	 * 「更新」ボタン押下時
	 * @return
	 */
	@Execute(input="index")
	public String update(){
		return "list.jsp";
	}

	/**
	 * 「削除」ボタン押下時
	 * @return
	 */
	@Execute(input="index")
	public String delete(){
		return "list.jsp";
	}

	/**
	 * 「失注削除」ボタン押下時
	 * @return
	 */
	@Execute(input="index")
	public String sittyu(){
		return "list.jsp";
	}

	/**
	 * formで受け取った検索条件をconditionに詰め替えるメソッド
	 * @param form
	 * @param condition
	 */
	private void refillCondition(UkListForm form, UkListCondition condition){
		condition.tounendo = form.searchNendo;
		condition.jinendo = String.valueOf(Integer.parseInt(form.searchNendo)+1);
		condition.zennendo = String.valueOf(Integer.parseInt(form.searchNendo)-1);
		condition.kokyakuName = form.searchKokyakuName;
		condition.ankenName = form.searchAnkenName;
		condition.jutyuName = form.searchJutyuName;
		condition.kakudoList = form.searchKakudoList;
		condition.hattyuTypeList = form.searchHattyuTypeList;
		condition.eigyoList = form.searchEigyoList;
		condition.conditionCodeList = form.searchConditionCodeList;
		condition.sort = form.searchSort;
	}

	/**
	 * 再表示のための処理をまとめたメソッド
	 * 各種プルダウンリストの情報を取得し、売上計画管理表の小計を計算する。
	 * @param ukList
	 */
	private void reload(List<UkListDto> ukList){
		nendoList = jdbcManager.selectBySqlFile(String.class, SqlFiles.ukSelectNendoList).getResultList();
		eigyoList = empMasterService.getEigyoList();
		kaihatsuGroupList = empMasterService.getKaihatsuGroupList();
		hattyuTypeList = ugCodeMasterService.getHattyuTypeList();
		kakudoList = ugCodeMasterService.getKakudoList();
		conditionCodeList = ugCodeMasterService.getConditionCodeList();

		calcSubtotal();
	}

	//TODO 小計の計算
	private void calcSubtotal(){

	}
}
